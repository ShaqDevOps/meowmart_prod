name: Build and Deploy to EKS

on:
  push:
    branches:
      - main  # Replace with your target branch

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # Required for OIDC
      contents: read

    steps:

    # Checkout Code
    
    - name: Checkout code
      uses: actions/checkout@v3

    # Configure AWS Credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::794038254982:role/GithubRole
        aws-region: ${{ secrets.AWS_REGION }}

    # Authenticate Docker Hub
    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Cache Docker Layers
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    # Build and Push Docker Image
    - name: Build and push Docker image
      run: |
        docker buildx build \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache \
          --push \
          --platform linux/amd64,linux/arm64 \
          --tag ${{ secrets.DOCKER_IMAGE }} .

    # Set up kubectl
    - name: Set up kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin

    # Update kubeconfig for EKS
    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.CLUSTER_NAME }}

    - name: Debug kubeconfig
      run: cat ~/.kube/config

    - name: Test kubectl access
      run: kubectl get nodes


    # Deploy to EKS
    - name: Deploy to EKS
      run: |
        kubectl apply -f deployment.yaml --validate=false
        kubectl apply -f service.yaml --validate=false
        kubectl set image deployment/meowmart meowmart-container=${{ secrets.DOCKER_IMAGE }}
        kubectl patch deployment meowmart -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"date\":\"$(date +%s)\"}}}}}"
        kubectl rollout status deployment/meowmart
